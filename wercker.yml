# docker box definition
box: java

# defining the dev pipeline
#
flywaymigrate:
  steps:
    - script:
          name: Migrate DB using Flyway
          code: |
             ./gradlew migrateDB -PdbUrl=jdbc:mysql://fgcart.cw8ksjytudj2.us-east-1.rds.amazonaws.com:3306/fgcart?useSSL=false&useUnicode=true&&characterEncoding=utf8
build:
  steps:
    - script:
        name: Build
        code: |
           ./gradlew --project-cache-dir=$WERCKER_CACHE_DIR build -x test

runtests:
   steps:
    - script:
        name: gradletest
        code: |
           ./gradlew --project-cache-dir=$WERCKER_CACHE_DIR build -PspringProfiles=aws
    - script:
        name: build docker
        code: cp $WERCKER_SOURCE_DIR/build/libs/fg-cartservice-0.0.1-SNAPSHOT.jar  $WERCKER_OUTPUT_DIR/opt/app.jar
    - script:
        name: move docker start file
        code: cp $WERCKER_SOURCE_DIR/start.sh  $WERCKER_OUTPUT_DIR/opt/start.sh
builddocker:
   steps:
    - script:
        name: builddocker
        code: |
           ./gradlew --project-cache-dir=$WERCKER_CACHE_DIR buildDocker
deploy:
  steps:
    - internal/docker-push:
        username: $DOCKER_HUB_USERNAME
        password: $DOCKER_HUB_PASSWORD
        tag: latest
        repository: lightsidenemo/fg-cartservice
        registry: https://index.docker.io/v1/


azure-push:
  steps:
    - script:
        code: |
          echo 'hi from alpine'
    - internal/docker-push:
        azure-client-id: '5d2d8717-fbf1-4a32-8c3e-bbfa181a6bb7'
        azure-client-secret: 'KU/OlOlSOwughOCDfVi6h7W902QYwqtSsqTofmeDCOA='
        azure-subscription-id: 'a5fa51f9-7374-4270-a7c6-f7cb90493a5b'
        azure-tenant-id: '1062da5f-d171-4785-99d6-bcc3895a3e86'
        azure-resource-group: 'fgnemo'
        azure-registry-name: 'fgnemo'
        azure-login-server: 'https://fgnemo.azurecr.io'
        repository: 'fgnemo'
        tag: ${WERCKER_GIT_COMMIT}
        cmd: "java -Djava.security.egd=file:/dev/./urandom -jar /app.jar"

deploy:
  steps:
    - kubectl:
        server: $KUBERNETES_MASTER
        username: $KUBERNETES_USERNAME
        password: $KUBERNETES_PASSWORD
        command: create -f fg-service-deployment.yml
